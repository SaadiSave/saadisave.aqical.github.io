class dict{constructor(a,b){if(this.keys=a,this.vals=b,this.keys.length!==this.vals.length)throw Error("The number of keys is not equal to the number of values. This dict is invalid.")}getval(a,b=void 0){const c=this.keys.indexOf(a);return-1===c?b:this.vals[c]}update(a,b){const c=this.keys.indexOf(a);-1===c?(this.keys.push(a),this.vals.push(b)):this.vals[c]=b}}class Aqi{constructor(a){this.vals=a,this.des=""}}class Eaqi extends Aqi{constructor(a){super(a);const b=this.vals.keys.indexOf("co");-1!==b&&(this.vals.keys.splice(b,1),this.vals.vals.splice(b,1)),this.EAQI=new dict(["pm2","pm10","no2","o3","so2"],[[10,20,25,50,75,800],[20,40,50,100,150,1200],[40,90,120,230,340,1e3],[50,100,130,240,380,800],[100,200,350,500,750,1250]]),this.IDX=new dict([1,2,3,4,5,6],["Good","Fair","Moderate","Poor","Very Poor","Extremely Poor"]),this.DES=new dict([1,2,3,4,5,6],[["The air quality is good. Enjoy your usual outdoor activities.","The air quality is good. Enjoy your usual outdoor activities."],["Enjoy your usual outdoor activities.","Enjoy your usual outdoor activities."],["Enjoy your usual outdoor activities.","Consider reducing intense outdoor activities, if you experience symptoms."],["Consider reducing intense activities outdoors, if you experience symptoms such as sore eyes, a cough or sore throat.","Consider reducing physical activities, particularly outdoors, especially if you experience symptoms."],["Consider reducing intense activities outdoors, if you experience symptoms such as sore eyes, a cough or sore throat.","Reduce physical activities, particularly outdoors, especially if you experience symptoms."],["Reduce physical activities outdoors.","Avoid physical activities outdoors."]]),this.colour=new dict([1,2,3,4,5,6],["#50f0e6","#50ccaa","#f0e641","#ff5050","#960032","#7d2181"])}setres(){const a=[];for(let b=0;b<this.vals.keys.length;b++){const c=this.vals.keys[b],d=this.EAQI.getval(c);this.vals.getval(c)>d[5]&&(this.des="How are you still alive?");let e=0;for(let a=0;a<d.length&&(e=d[a],!(this.vals.getval(c)<=e));a++);const f=d.indexOf(e)+1;a.push(f)}this.idx=Math.max(...a),this.res=this.IDX.getval(this.idx,"")}setdes(){if(""===this.des){const[c,a]=this.DES.getval(this.idx,["Invalid","Invalid"]);this.des=`Health messages:\nGeneral population: ${c}\nSensitive populations: ${a}`}}setcol(){this.col="How are you still alive?"===this.des?"#000000":this.colour.getval(this.idx,"#ffffff")}}class Naqi extends Aqi{constructor(a){super(a);try{if(this.vals.getval("co")===void 0)throw Error("key co does not exist");else this.vals.update("co",this.vals.getval("co")/100)}catch(a){}this.NAQI=new dict(["pm2","pm10","no2","o3","so2","co"],[[30,60,90,120,250],[50,100,250,350,430],[40,80,180,280,400],[50,100,168,208,748],[40,80,380,800,1600],[10,20,100,170,340]]),this.DES=new dict([1,2,3,4,5,6],["Good","Satisfactory","Moderate","Poor","Very Poor","Severe"]),this.HM=new dict([1,2,3,4,5,6],["Minimal Impact","May cause minor breathing discomfort to sensitive people","May cause breathing discomfort to the people with lung disease such as asthma and discomfort to people with heart disease, children and older adults","May cause breathing discomfort to people on prolonged exposure and discomfort to people with heart disease with short exposure","May cause respiratory illness to the people on prolonged exposure. Effects may be more pronounced in people with lung and heart diseases","May cause respiratory effects even on healthy people and serious health impacts on people with lung/heart diseases. The health impacts may be experienced even during light physical activity"]),this.Ival=new dict([1,2,3,4,5],[[0,50],[51,100],[101,200],[201,300],[301,400]]),this.colour=new dict([1,2,3,4,5,6],["#009933","#58ff09","#ffff00","#ffa500","#ff0000","#990000"])}setres(){var a=Math.round,b=Math.max;const c=[],d=[];for(let b=0;b<this.vals.keys.length;b++){const e=this.vals.keys[b],f=this.NAQI.getval(e);if(this.vals.getval(e)>f[4])c.push(a(401/f[4]*(this.vals.getval(e)-f[4])+401)),d.push(6);else{let b=0;for(let a=0;a<f.length&&(b=f[a],!(this.vals.getval(e)<=b));a++);let g=f.indexOf(b)+1;d.push(g),0!==g&&this.vals.getval(e)<f[g-1]+1&&(b=f[g-1],g=f.indexOf(b));const h=g+1,[i,j]=this.Ival.getval(h,[0,0]);let k=0;0!==g&&(k=f[g-1]+1);const l=b;c.push(a((j-i)/(l-k)*(this.vals.getval(e)-k)+i))}}this.res=b(...c).toString(),this.idx=b(...d)}setdes(){this.des=500<parseInt(this.res)?"Extremely severe. Avoid going outdoors.":`Description: ${this.DES.getval(this.idx)}\nHealth messages: ${this.HM.getval(this.idx)}`}setcol(){this.col=700<parseInt(this.res)?"#000000":this.colour.getval(this.idx,"#ffffff")}}class Mmaqi extends Aqi{constructor(a){super(a);try{if(this.vals.getval("co")===void 0)throw Error("key co does not exist");else this.vals.update("co",this.vals.getval("co")/100)}catch(a){}this.MmAQI=new dict(["pm2","pm10","no2","o3","so2","co"],[[10,25,50,75,150],[20,50,75,150,230],[40,80,120,230,340],[50,100,130,240,380],[40,80,200,500,750],[30,100,150,250,340]]),this.DES=new dict([1,2,3,4,5,6,7,8],["Good","Fair","Moderate","Poor","Very Poor","Extremely Poor","Severe","Hazardous"]),this.HM=new dict([1,2,3,4,5,6,7,8],[["The air quality is good. Enjoy your usual outdoor activities.","The air quality is good. Enjoy your usual outdoor activities."],["Enjoy your usual outdoor activities.","Enjoy your usual outdoor activities."],["Enjoy your usual outdoor activities.","Consider reducing intense outdoor activities, if you experience symptoms."],["Consider reducing intense activities outdoors, if you experience symptoms such as sore eyes, a cough or sore throat.","Consider reducing physical activities, particularly outdoors, especially if you experience symptoms."],["Consider reducing intense activities outdoors, if you experience symptoms such as sore eyes, a cough or sore throat.","Reduce physical activities, particularly outdoors, especially if you experience symptoms."],["Reduce physical activities outdoors.","Avoid physical activities outdoors."],["Avoid physical activities outdoors.","Do not go outdoors."],["Do not go outdoors. An air purifier is recommended.","Avoid coming into contact with any outdoor pollution. An air purifier is essential."]]),this.Ival=new dict([1,2,3,4,5],[[0,50],[51,100],[101,200],[201,300],[301,400]]),this.colour=new dict([1,2,3,4,5,6,7,8],["#50f0e6","#50ccaa","#f0e641","#ff5050","#960032","#7d2181","#000000","#000000"])}setres(){var a=Math.round,b=Math.max;const c=[],d=[];for(let b=0;b<this.vals.keys.length;b++){const e=this.vals.keys[b],f=this.MmAQI.getval(e);if(this.vals.getval(e)>f[4])c.push(a(401/f[4]*(this.vals.getval(e)-f[4])+401)),d.push(6);else{let b=0;for(let a=0;a<f.length&&(b=f[a],!(this.vals.getval(e)<=b));a++);let g=f.indexOf(b)+1;d.push(g),0!==g&&this.vals.getval(e)<f[g-1]+1&&(b=f[g-1],g=f.indexOf(b));const h=g+1,[i,j]=this.Ival.getval(h,[0,0]);let k=0;0!==g&&(k=f[g-1]+1);const l=b;c.push(a((j-i)/(l-k)*(this.vals.getval(e)-k)+i))}}this.res=b(...c).toString(),this.idx=b(...d),500<parseInt(this.res)&&775>parseInt(this.res)?this.idx=7:775<=parseInt(this.res)&&(this.idx=8)}setdes(){const[c,a]=this.HM.getval(this.idx,["Invalid","Invalid"]);this.des=`${this.DES.getval(this.idx,"Invalid")}\nHealth messages:\nGeneral population: ${c}\nSensitive populations: ${a}`}setcol(){this.col=this.colour.getval(this.idx,"#ffffff")}}function convert(a,b,c){const d=new dict(["co","no2","o3","so2"],[28,46,48,64]);if("ppm"===c){const c=d.getval(a);b=40.9*b*c}else if("ppb"===c){const c=d.getval(a);b=.0409*b*c}return Math.round(100*b)/100}function compare(c,a){const[b,d]=c,[e,f]=a;return Math.round(100*(1-e*d/(b*f)))}